<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="ClientConfigurationSection" type="Microsoft.Cosmos.Client.ClientConfigurationSection, Microsoft.Cosmos.Client"/>
  </configSections>
  <ClientConfigurationSection>
    <MaxConcurrentRequests Value="10" />
    <DefaultEndpointHost Value="https://cosmos.osdinfra.net"/>
  </ClientConfigurationSection>
  <system.serviceModel>
    <bindings>
      <customBinding>
        <binding name="customHTTPBinding"  sendTimeout="0:10:0.0">
          <textMessageEncoding messageVersion="Soap11">
            <readerQuotas maxArrayLength="16777216" maxStringContentLength="104857600" maxBytesPerRead="1048576"/>
          </textMessageEncoding>
          <!--Note. If you encounter high failure rate when you try do export big partitions with exception message says like, 
            "System.IO.IOException: An exception has been thrown when reading the stream."
            Please try following practice, most prefered recommendation goes first.
            1. Run command "netsh int tcp set global autotuninglevel=disabled" to disable TCP-AUTO-TUNING feature, if possible.
            2. Try to add retry logic to download each partition seperately and dump the content to 
               your local disk quickly before feeding to other service in your data flow, e.g. SQL Server.
            3. Try to disable http channel compression, by chagne decompressionEnabled="false" in following section.
          -->
          <httpTransport maxReceivedMessageSize="1099511627776" maxBufferSize="16777216" keepAliveEnabled="true" transferMode="StreamedResponse" authenticationScheme="Ntlm" decompressionEnabled="true"/>
        </binding>
        <binding name="customHTTPSBinding"  sendTimeout="0:10:0.0">
          <textMessageEncoding messageVersion="Soap11">
            <readerQuotas maxArrayLength="16777216" maxStringContentLength="104857600" maxBytesPerRead="1048576"/>
          </textMessageEncoding>
          <!--Note. If you encounter high failure rate when you try do export big partitions with exception message says like, 
            "System.IO.IOException: An exception has been thrown when reading the stream."
            Please try following practice, most prefered recommandation goes first.
            1. Run command "netsh int tcp set global autotuninglevel=disabled" to disable TCP-AUTO-TUNING feature, if possible.
            2. Try to add retry logic to download each partition seperately and dump the content to 
               you local disk quickly before feed to other service in your data flow, e.g. SQL Server.
            3. Try to disable http channel compression, by chagne decompressionEnabled="false" in following section.
          -->
          <httpsTransport maxReceivedMessageSize="1099511627776" maxBufferSize="16777216" keepAliveEnabled="true" transferMode="StreamedResponse" authenticationScheme="Ntlm" decompressionEnabled="true"/>
        </binding>
        <binding name="customCertSecureBinding"  sendTimeout="0:10:0.0">
          <textMessageEncoding messageVersion="Soap11">
            <readerQuotas maxArrayLength="16777216" maxStringContentLength="104857600" maxBytesPerRead="1048576"/>
          </textMessageEncoding>
          <httpsTransport maxReceivedMessageSize="1099511627776"
                          maxBufferSize="16777216"
                          keepAliveEnabled="true"
                          transferMode="StreamedResponse"
                          authenticationScheme="Ntlm" decompressionEnabled="true"
                          requireClientCertificate="true"/>
        </binding>
      </customBinding>
    </bindings>
    <client>
      <endpoint address="http://cosmos.osdinfra.net:80/StructuredStream/" behaviorConfiguration="StructuredStreamServiceBehavior"
        binding="customBinding" bindingConfiguration="customHTTPBinding"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IStructuredStreamService"
        name="Microsoft.Cosmos.FrontEnd.Test.WebClient.StructuredStreamServiceClient">
        <identity>
          <servicePrincipalName value="http/cosmos.osdinfra.net" />
        </identity>
      </endpoint>

      <endpoint address="https://cosmos.osdinfra.net/StructuredStream/" behaviorConfiguration="StructuredStreamServiceBehavior"
         binding="customBinding" bindingConfiguration="customHTTPSBinding"
         contract="Microsoft.Cosmos.FrontEnd.Contract.IStructuredStreamService"
         name="Microsoft.Cosmos.FrontEnd.Test.WebClient.StructuredStreamServiceClient.Https">
        <identity>
          <servicePrincipalName value="https/cosmos.osdinfra.net" />
        </identity>
      </endpoint>

      <endpoint address="https://cosmos.osdinfra.net/StructuredStreamServiceMgr.svc/cert" behaviorConfiguration="StructuredStreamServiceBehaviorCert"
        binding="customBinding" bindingConfiguration="customCertSecureBinding"
        contract="Microsoft.Cosmos.FrontEnd.Contract.IStructuredStreamService"
        name="Microsoft.Cosmos.FrontEnd.Test.WebClient.StructuredStreamServiceClient.Https.Cert">
      </endpoint>
    </client>
    <behaviors>
      <endpointBehaviors>
        <behavior name="StructuredStreamServiceBehavior">
          <dataContractSerializer maxItemsInObjectGraph="16777216" />         
        </behavior>
        
        <behavior name="StructuredStreamServiceBehaviorCert">
          <dataContractSerializer maxItemsInObjectGraph="16777216" />
          <!--
            There are 3 ways to do authentication.
            Method 1: Specify cert-related properties in ScopeExportSettings, and <clientCertificate> mustn't be set. It will use Cert Auth.  
                    1.1: If you want to use certificate stored locally, specify ClientCertificateStoreLocation,ClientCertificateFindByValue,ClientCertificateStoreName and ClientCertificateFindType.
                    1.2: If you want to user certificate object. specify ClientCertificate.
            Method 2: Specify <clientCertificate> below, and no setting in ScopeExportSettings. It will use Cert Auth.
            Method 3: No <clientCertificate> and no setting in ScopeExportSettings , It will use Windows Auth.
          -->
          <clientCredentials>
           <!--  <clientCertificate findValue="XXXXXX"
              x509FindType="FindByIssuerName"
              storeLocation="LocalMachine"
              storeName="My" /> -->
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>

  </system.serviceModel>
</configuration>
